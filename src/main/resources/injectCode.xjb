<?xml version="1.0" encoding="UTF-8"?>
<jaxb:bindings
xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
jaxb:extensionBindingPrefixes="ci "
jaxb:version="2.1">
	<jaxb:bindings schemaLocation="schemas/stix_core.xsd">
		<jaxb:bindings node="//xs:complexType[@name='STIXType']">
			<ci:code>
<![CDATA[
public String toXML() throws javax.xml.bind.JAXBException, javax.xml.parsers.ParserConfigurationException { 
	// Marshal it to a Document
	org.w3c.dom.Document document = javax.xml.parsers.DocumentBuilderFactory.newInstance()
			.newDocumentBuilder().newDocument();

	org.mitre.stix.stix_1.ObjectFactory factory = new org.mitre.stix.stix_1.ObjectFactory();
	javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance("org.mitre.stix.stix_1");
	javax.xml.bind.JAXBElement<org.mitre.stix.stix_1.STIXType> stixPackage = factory.createSTIXPackage(this);

	javax.xml.bind.Marshaller marshaller = jaxbContext.createMarshaller();
	marshaller.setProperty("jaxb.formatted.output", Boolean.TRUE);
	// marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION,
	// "http://my.namespace my.schema.xsd");
	marshaller.marshal(stixPackage, document);

	// Remove unused Namespace
	org.mitre.stix.utility.Utilities.removeUnusedNamespaces(document);

	if (getId() != null) {
		// Add example xnlns to root for the id.
		org.w3c.dom.Element root = document.getDocumentElement();
		root.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:" + getId().getPrefix(), getId().getNamespaceURI());
	}
	
	return org.mitre.stix.utility.Utilities.getStringFromDocument(document);
}

public static org.mitre.stix.stix_1.STIXType fromXML(java.net.URL url) throws javax.xml.bind.JAXBException, java.io.IOException { 
	System.out.println("Hello from inside .fromXML()!"); 

	javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext
			.newInstance("org.mitre.stix.stix_1");

	javax.xml.bind.Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();

	java.io.InputStream inputStream = url.openStream();

	javax.xml.bind.JAXBElement<org.mitre.stix.stix_1.STIXType> element = unmarshaller.unmarshal(
			new javax.xml.transform.stream.StreamSource(inputStream), org.mitre.stix.stix_1.STIXType.class);
			
	inputStream.close();
	
	return element.getValue();
}
]]>
			</ci:code>
		</jaxb:bindings>
	</jaxb:bindings>
</jaxb:bindings>